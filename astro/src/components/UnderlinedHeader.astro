---
const { left = false,white = false } = Astro.props;
---

<style>
  .slide-in-left {
    opacity: 0;
    transform: translateX(-100px);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
  }
  
  @media (min-width: 768px) {
    .slide-in-left {
      transform: translateX(-250px);
    }
  }
  
  .slide-in-left.animate {
    opacity: 1;
    transform: translateX(0);
  }
</style>

<h2 
  class={`text-2xl sm:text-3xl md:text-4xl ${left ? "text-left slide-in-left" : "text-center"} ${white ? "text-white" : "text-custom-dark" }`} 
  style="font-weight: 900;"
  data-animate={left}
>
    <slot />
    <div class={`w-2/12 sm:w-1/12 mt-2 ${left ? "mx-0" : "mx-auto"} border-b-2 border-red-500`}></div>
</h2>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const headers = document.querySelectorAll('[data-animate]');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
          observer.unobserve(entry.target); // Stop observing once animated
        }
      });
    }, {
      threshold: 0.2, // Trigger when 20% of the element is visible
      rootMargin: '0px 0px -50px 0px' // Start animation slightly before fully in view
    });
    
    headers.forEach((header) => {
      observer.observe(header);
    });
  });
</script>